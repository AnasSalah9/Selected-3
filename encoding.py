# -*- coding: utf-8 -*-
"""Encoding.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RQ4I3_Y_zCbRFY5pNWOBXOPaV4SuiYds
"""

import numpy as np
import pandas as pd

from sklearn.model_selection import train_test_split 
from sklearn.feature_extraction.text import TfidfVectorizer

data= pd.read_csv('Final Output.csv',sep=',')
data.head()

author_name = data['author_name']
book_name = data['book_name']
book_language = data['book_language']
publisher = data['publisher']


vec_model = TfidfVectorizer()

author_name_vec=vec_model.fit_transform(author_name)
author_name_vec=pd.DataFrame.sparse.from_spmatrix(author_name_vec)


print(f'the new shape is{author_name_vec.shape}')

author_name_vec.head()

book_language_vec=vec_model.fit_transform(book_language)
book_language_vec=pd.DataFrame.sparse.from_spmatrix(book_language_vec)
print(f'the new shape is{book_language_vec.shape}')
book_language_vec.head()

book_name_vec=vec_model.fit_transform(book_name)
book_name_vec=pd.DataFrame.sparse.from_spmatrix(book_name_vec)
print(f'the new shape is{book_name_vec.shape}')
book_name_vec.head()

publisher_vec=vec_model.fit_transform(publisher)
publisher_vec=pd.DataFrame.sparse.from_spmatrix(publisher_vec)
print(f'the new shape is{publisher_vec.shape}')
book_name_vec.head()

from sklearn.preprocessing import OrdinalEncoder

ordinal_encoder = OrdinalEncoder()

object_cols = ['author_name', 'book_category', 'book_language', 'publisher']

data[object_cols] = ordinal_encoder.fit_transform(data[object_cols])

data.head()

res = pd.concat([data, book_name_vec], axis=1)

res.head()

res.drop(['book_name'], axis=1, inplace=True)

res.head()

res.to_csv('FinalNum.csv',encoding='utf-8')

