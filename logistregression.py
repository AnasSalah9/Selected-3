# -*- coding: utf-8 -*-
"""LogistRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dhgCSfnx0_tQElhvYBWm2Zg15MrsV99n
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn import model_selection
from sklearn import linear_model
from sklearn import metrics

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('FinalNum.csv',encoding='utf-8')

df.head()

y = df.book_category
x = df.drop(['book_category'], axis=1)

x.head()



# Generate and dataset for Logistic Regression
# x, y = make_classification(
#     n_samples=100,
#     n_features=1,
#     n_classes=2,
#     n_clusters_per_class=1,
#     flip_y=0.03,
#     n_informative=1,
#     n_redundant=0,
#     n_repeated=0
# )

# Create a scatter plot
plt.scatter(x, y, c=y, cmap='rainbow')
plt.title('Scatter Plot of Logistic Regression')
plt.show()

# Split the dataset into training and test dataset
x_train, x_test, y_train, y_test = model_selection.train_test_split(x, y, test_size = 0.2, random_state = 1)


print('x_train', x_train)

# Create a Logistic Regression Object, perform Logistic Regression
log_reg = linear_model.LogisticRegression()
log_reg.fit(x_train, y_train)

print('Predicted value is =', log_reg.predict([x_test[10]]))

print('Actual value from test data is %s and corresponding image is as below' % (y_test[10]) )
plt.matshow(digits_df.images[10]) 
plt.show()

log_reg.score(x_test, y_test)

